angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(n,o){n.$on("login",function(o,t){n.currentUser=t,console.log(n.currentUser+"FROM MAIN CONTROLLER")}),n.logOut=function(){n.currentUser=null,o.clearToken(),console.log("LOGGED OUT")}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(n,e,r){n.login=function(o,t){e.login(o,t).then(function(o){n.$emit("login",o.data),r.path("/")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc","UserSvc",function(n,o,t){n.isLogged=!1,n.close=function(){n.isLogged=!1},o.fetch().then(function(o){n.posts=o.data},function(o){console.log("Error saving data")}),n.addPost=function(){n.postBody&&(o.create({username:"donaldDuck",body:n.postBody}).then(function(o){console.log(o),n.posts.unshift(o.data),n.postBody=null},function(o){n.isLogged=!0,console.log("Error saving data")}),n.isLogged=!1)},n.$on("login",function(o,t){n.currentUser=t})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(o,n,e){o.register=function(o,t){n.register(o,t).then(function(o){e.path("/login")})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(o,t){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}),t.html5Mode(!0)}]),angular.module("app").service("UserSvc",["$http",function(n){var e=this;e.getUser=function(){return n.get("/api/users")},e.login=function(o,t){return n.post("/api/sessions",{username:o,password:t}).then(function(o){return e.token=o.data,n.defaults.headers.common["X-Auth"]=o.data,e.getUser()})},e.register=function(o,t){return n.post("/api/users",{username:o,password:t}).then(function(o){console.log("User status: "+o.data)})},e.clearToken=function(){delete n.defaults.headers.common["X-Auth"]}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
